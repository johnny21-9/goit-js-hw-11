{"version":3,"sources":["js/02-timer.js"],"names":["Refs","dateInput","document","querySelector","startButton","stopButton","timerInterfaceRefs","days","hours","minutes","seconds","threeHoursInMs","dateChosen","dateChosenMs","counter","CurrentDate","Date","now","dateCheck","event","stopTimer","target","value","getTime","console","log","alertShow","buttonEnable","updateInterface","convertMs","startTimer","buttonDisable","setInterval","timeDiferance","zeroTime","clearInterval","textContent","addLeadingZero","String","padStart","ms","Math","floor","hour","minute","second","window","alert","button","disabled","addEventListener"],"mappings":";AAEA,MAAMA,EAAO,CACTC,UAAWC,SAASC,cAAc,kBAClCC,YAAaF,SAASC,cAAc,sBACpCE,WAAYH,SAASC,cAAc,sBAEjCG,EAAqB,CACvBC,KAAML,SAASC,cAAc,mBAC7BK,MAAON,SAASC,cAAc,oBAC9BM,QAASP,SAASC,cAAc,sBAChCO,QAASR,SAASC,cAAc,uBAI9BQ,EAAiB,MACvB,IACIC,EACAC,EACAC,EAHAC,EAAcC,KAAKC,MAAON,EAY9B,SAASO,EAAUC,GAKXN,GAJJO,IACAR,EAAaO,EAAME,OAAOC,MAC1BT,EAAe,IAAIG,KAAKJ,GAAYW,UACpCC,QAAQC,IAAIZ,GACRA,EAAeE,EACfW,QACG,CACHC,EAAa3B,EAAKI,aAGlBwB,EADuBC,EADDhB,EAAeE,KAM7C,SAASe,IACLC,EAAc/B,EAAKI,aACnBuB,EAAa3B,EAAKK,YAClBS,EAAUkB,YAAY,KAClBjB,EAAcC,KAAKC,MAAON,EACpBsB,MAAAA,EAAgBpB,EAAeE,EAErCa,EADuBC,EAAUI,IAE7BA,GAAiB,GACjBb,KAEL,KAGP,SAASA,IACCc,MAAAA,EAAWL,EAAU,GAC3BM,cAAcrB,GACdc,EAAgBM,GAChBH,EAAc/B,EAAKK,YAGvB,SAASuB,GAAgB,KAAErB,EAAF,MAAQC,EAAR,QAAeC,EAAf,QAAwBC,IAC7CJ,EAAmBC,KAAK6B,YAAcC,EAAe9B,GACrDD,EAAmBE,MAAM4B,YAAcC,EAAe7B,GACtDF,EAAmBG,QAAQ2B,YAAcC,EAAe5B,GACxDH,EAAmBI,QAAQ0B,YAAcC,EAAe3B,GAI5D,SAAS2B,EAAef,GACfgB,OAAAA,OAAOhB,GAAOiB,SAAS,EAAG,KAGnC,SAASV,EAAUW,GAgBR,MAAA,CAAEjC,KAREkC,KAAKC,MAAMF,EAHZG,OAWKnC,MANHiC,KAAKC,MAAOF,EALdG,MADCC,MAYWnC,QAJRgC,KAAKC,MAAQF,EAPjBG,MADCC,KADEC,KAakBnC,QAFjB+B,KAAKC,MAASF,EATlBG,MADCC,KADEC,IADA,MAiBjB,SAASnB,IACToB,OAAOC,MAAM,sCAGb,SAAShB,EAAciB,GACnBA,EAAOC,UAAW,EAEtB,SAAStB,EAAaqB,GAClBA,EAAOC,UAAW,EAlFtBlB,EAAc/B,EAAKI,aACnB2B,EAAc/B,EAAKK,YAEnBL,EAAKC,UAAUiD,iBAAiB,QAAShC,GACzClB,EAAKI,YAAY8C,iBAAiB,QAASpB,GAC3C9B,EAAKK,WAAW6C,iBAAiB,QAAS9B","file":"02-timer.9d3c012c.js","sourceRoot":"../src","sourcesContent":["\n\nconst Refs = {\n    dateInput: document.querySelector('#date-selector'),\n    startButton: document.querySelector('button[data-start]'),\n    stopButton: document.querySelector('button[data-stop]'),\n}\nconst timerInterfaceRefs = {\n    days: document.querySelector('span[data-days]'),\n    hours: document.querySelector('span[data-hours]'),\n    minutes: document.querySelector('span[data-minutes]'),\n    seconds: document.querySelector('span[data-seconds]'),\n\n}\n\nconst threeHoursInMs = 10800000;\nlet CurrentDate = Date.now()+ threeHoursInMs;\nlet dateChosen;\nlet dateChosenMs;\nlet counter;\n\nbuttonDisable(Refs.startButton);\nbuttonDisable(Refs.stopButton);\n\nRefs.dateInput.addEventListener('input', dateCheck);\nRefs.startButton.addEventListener('click', startTimer);\nRefs.stopButton.addEventListener('click', stopTimer);\n\nfunction dateCheck(event) {\n    stopTimer();\n    dateChosen = event.target.value;\n    dateChosenMs = new Date(dateChosen).getTime();\n    console.log(dateChosenMs);\n    if (dateChosenMs < CurrentDate) {\n        alertShow()\n    } else {\n        buttonEnable(Refs.startButton);\n        const timeDiferance = dateChosenMs - CurrentDate;\n        const timeComponents = convertMs(timeDiferance);\n        updateInterface(timeComponents);\n    }\n}\n\nfunction startTimer() {\n    buttonDisable(Refs.startButton);\n    buttonEnable(Refs.stopButton);\n    counter = setInterval(() => {\n        CurrentDate = Date.now()+ threeHoursInMs;\n        const timeDiferance = dateChosenMs - CurrentDate;\n        const timeComponents = convertMs(timeDiferance);\n        updateInterface(timeComponents);\n        if (timeDiferance <= 0) {\n            stopTimer();\n        }\n    }, 1000);\n}\n\nfunction stopTimer() {\n    const zeroTime = convertMs(0);\n    clearInterval(counter);\n    updateInterface(zeroTime);\n    buttonDisable(Refs.stopButton);\n}\n\nfunction updateInterface({ days, hours, minutes, seconds }) {\n    timerInterfaceRefs.days.textContent = addLeadingZero(days);\n    timerInterfaceRefs.hours.textContent = addLeadingZero(hours);\n    timerInterfaceRefs.minutes.textContent = addLeadingZero(minutes);\n    timerInterfaceRefs.seconds.textContent = addLeadingZero(seconds);\n}\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction alertShow () {\nwindow.alert(\"Please choose a date in the future\")\n};\n\nfunction buttonDisable(button) {\n    button.disabled = true;\n}\nfunction buttonEnable(button) {\n    button.disabled = false;\n}"]}